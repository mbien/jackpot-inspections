
<!description="Use comparison utilities.">

if ($a < $b) {
    return -1;
} else if ($a > $b) {
    return 1;
} else {
    return 0;
}
=>
return Byte.compare($a, $b); :: $a instanceof byte && $b instanceof byte
=>
return Short.compare($a, $b); :: $a instanceof short && $b instanceof short
=>
return Integer.compare($a, $b); :: $a instanceof int && $b instanceof int
=>
return Long.compare($a, $b); :: $a instanceof long && $b instanceof long
=>
return Float.compare($a, $b); :: $a instanceof float && $b instanceof float
=>
return Double.compare($a, $b); :: $a instanceof double && $b instanceof double
;;


if ($a < $b) {
    return -1;
} 
if ($a > $b) {
    return 1;
}
return 0;
=>
return Byte.compare($a, $b); :: $a instanceof byte && $b instanceof byte
=>
return Short.compare($a, $b); :: $a instanceof short && $b instanceof short
=>
return Integer.compare($a, $b); :: $a instanceof int && $b instanceof int
=>
return Long.compare($a, $b); :: $a instanceof long && $b instanceof long
=>
return Float.compare($a, $b); :: $a instanceof float && $b instanceof float
=>
return Double.compare($a, $b); :: $a instanceof double && $b instanceof double
;;



$a > $b ? 1 : $a == $b ? 0 : -1
=>
Byte.compare($a, $b) :: $a instanceof byte && $b instanceof byte
=>
Short.compare($a, $b) :: $a instanceof short && $b instanceof short
=>
Integer.compare($a, $b) :: $a instanceof int && $b instanceof int
=>
Long.compare($a, $b) :: $a instanceof long && $b instanceof long
=>
Float.compare($a, $b) :: $a instanceof float && $b instanceof float
=>
Double.compare($a, $b) :: $a instanceof double && $b instanceof double
;;

$a < $b ? -1 : $a == $b ? 0 : 1
=>
Byte.compare($a, $b) :: $a instanceof byte && $b instanceof byte
=>
Short.compare($a, $b) :: $a instanceof short && $b instanceof short
=>
Integer.compare($a, $b) :: $a instanceof int && $b instanceof int
=>
Long.compare($a, $b) :: $a instanceof long && $b instanceof long
=>
Float.compare($a, $b) :: $a instanceof float && $b instanceof float
=>
Double.compare($a, $b) :: $a instanceof double && $b instanceof double
;;


$T.compare($a, 0) :: $T instanceof Number
=>
Integer.signum($a) :: $a instanceof Byte
=>
Integer.signum($a) :: $a instanceof Short
=>
Integer.signum($a) :: $a instanceof Integer
=>
Long.signum($a) :: $a instanceof Long
=>
Math.signum($a) :: otherwise
;;
